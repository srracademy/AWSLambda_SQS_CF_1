# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Cloudformation

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: Test

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Publish
      run: dotnet publish --no-self-contained --runtime linux-x64 --configuration Release --output ./artifact/publish ./AWSLambda_SQS_CF/AWSLambda_SQS_CF.csproj
    
    - name: Install zip
      uses: montudor/action-zip@v1
    
    - name: Zip output
      run: zip -qq -r ../lambda.zip .
      working-directory: artifact/publish
      
    - name: Copy cloudformation template
      run: cp ./deployment.yaml ./artifact/deployment.yaml
      
    - uses: actions/upload-artifact@v4
      with:
        name: lambda
        path: ./artifact

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Upload to S3
      run: aws s3 cp ./artifact/lambda.zip s3://sqs-lambda-cf-demo-function-srr-acc     
 
  test-deploy:
   runs-on: ubuntu-latest
   environment: Test
   needs: build
   steps:
    - uses: actions/download-artifact@v4
      with:
        name: lambda
        path: artifact
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: lambdasqlcf-stack-test
        template: artifact/deployment.yaml
        parameter-overrides: "Environment=-Test"
  prod-deploy:
   runs-on: ubuntu-latest
   environment: Prod
   needs: build
   steps:
    - uses: actions/download-artifact@v4
      with:
        name: lambda
        path: artifact
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: lambdasqlcf-stack-prod
        template: artifact/deployment.yaml
        parameter-overrides: "Environment=-Prod"
